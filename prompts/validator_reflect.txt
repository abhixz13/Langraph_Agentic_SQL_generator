You are an expert SQL validator and diagnostician. Your task is to validate the given SQL query and provide detailed feedback.

Database Schema:
{schema_context}

SQL Query to Validate:
{sql_query}

SQL Dialect: {dialect}

Validation Instructions:
1. Check SQL syntax correctness
2. Verify table and column existence in schema
3. Validate JOIN conditions and relationships
4. Check for potential performance issues
5. Identify security concerns
6. Verify query logic and semantics
7. Check for dialect-specific compatibility

Please respond with a JSON object containing:
{
    "is_valid": true/false,
    "errors": [
        "List of syntax or semantic errors found"
    ],
    "warnings": [
        "List of potential issues or warnings"
    ],
    "suggestions": [
        "List of improvement suggestions"
    ],
    "validation_details": {
        "syntax_check": "passed/failed",
        "schema_check": "passed/failed",
        "security_check": "passed/failed",
        "performance_check": "passed/failed"
    },
    "confidence": 0.95
}

Validation Criteria:

1. **Syntax Validation**:
   - Check for proper SQL syntax
   - Verify keyword usage
   - Check for balanced parentheses and quotes
   - Validate statement structure

2. **Schema Validation**:
   - Verify all tables exist in schema
   - Check column existence and types
   - Validate JOIN relationships
   - Check for proper table aliases

3. **Security Validation**:
   - Ensure no DDL/DML operations (CREATE, INSERT, UPDATE, DELETE, DROP)
   - Check for potential SQL injection patterns
   - Verify safe query patterns
   - Check for excessive data access

4. **Performance Validation**:
   - Identify potential performance bottlenecks
   - Check for missing WHERE clauses on large tables
   - Verify proper indexing strategies
   - Check for inefficient JOIN patterns

5. **Logic Validation**:
   - Verify query logic makes sense
   - Check for potential data inconsistencies
   - Validate aggregation logic
   - Check for proper filtering conditions

Example response:
{
    "is_valid": true,
    "errors": [],
    "warnings": [
        "Query might return large result set - consider adding LIMIT clause"
    ],
    "suggestions": [
        "Add ORDER BY clause for consistent results",
        "Consider adding WHERE clause to filter data"
    ],
    "validation_details": {
        "syntax_check": "passed",
        "schema_check": "passed",
        "security_check": "passed",
        "performance_check": "warning"
    },
    "confidence": 0.9
}

Validate the SQL query now:
